/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WordleLayoutRouteImport } from './routes/_wordle-layout'
import { Route as NewsLayoutRouteImport } from './routes/_news-layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WordleLayoutWordleRouteImport } from './routes/_wordle-layout/wordle'
import { Route as NewsLayoutNewsRouteImport } from './routes/_news-layout/news'

const WordleLayoutRoute = WordleLayoutRouteImport.update({
  id: '/_wordle-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsLayoutRoute = NewsLayoutRouteImport.update({
  id: '/_news-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WordleLayoutWordleRoute = WordleLayoutWordleRouteImport.update({
  id: '/wordle',
  path: '/wordle',
  getParentRoute: () => WordleLayoutRoute,
} as any)
const NewsLayoutNewsRoute = NewsLayoutNewsRouteImport.update({
  id: '/news',
  path: '/news',
  getParentRoute: () => NewsLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/news': typeof NewsLayoutNewsRoute
  '/wordle': typeof WordleLayoutWordleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/news': typeof NewsLayoutNewsRoute
  '/wordle': typeof WordleLayoutWordleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_news-layout': typeof NewsLayoutRouteWithChildren
  '/_wordle-layout': typeof WordleLayoutRouteWithChildren
  '/_news-layout/news': typeof NewsLayoutNewsRoute
  '/_wordle-layout/wordle': typeof WordleLayoutWordleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/news' | '/wordle'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/news' | '/wordle'
  id:
    | '__root__'
    | '/'
    | '/_news-layout'
    | '/_wordle-layout'
    | '/_news-layout/news'
    | '/_wordle-layout/wordle'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NewsLayoutRoute: typeof NewsLayoutRouteWithChildren
  WordleLayoutRoute: typeof WordleLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_wordle-layout': {
      id: '/_wordle-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WordleLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_news-layout': {
      id: '/_news-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NewsLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_wordle-layout/wordle': {
      id: '/_wordle-layout/wordle'
      path: '/wordle'
      fullPath: '/wordle'
      preLoaderRoute: typeof WordleLayoutWordleRouteImport
      parentRoute: typeof WordleLayoutRoute
    }
    '/_news-layout/news': {
      id: '/_news-layout/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsLayoutNewsRouteImport
      parentRoute: typeof NewsLayoutRoute
    }
  }
}

interface NewsLayoutRouteChildren {
  NewsLayoutNewsRoute: typeof NewsLayoutNewsRoute
}

const NewsLayoutRouteChildren: NewsLayoutRouteChildren = {
  NewsLayoutNewsRoute: NewsLayoutNewsRoute,
}

const NewsLayoutRouteWithChildren = NewsLayoutRoute._addFileChildren(
  NewsLayoutRouteChildren,
)

interface WordleLayoutRouteChildren {
  WordleLayoutWordleRoute: typeof WordleLayoutWordleRoute
}

const WordleLayoutRouteChildren: WordleLayoutRouteChildren = {
  WordleLayoutWordleRoute: WordleLayoutWordleRoute,
}

const WordleLayoutRouteWithChildren = WordleLayoutRoute._addFileChildren(
  WordleLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NewsLayoutRoute: NewsLayoutRouteWithChildren,
  WordleLayoutRoute: WordleLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
